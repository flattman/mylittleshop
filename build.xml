<project name="MyLittleShop" default="build" basedir="." xmlns:sonar="antlib:org.sonar.ant">
	<description>
    	Einsendeaufgabe 4 VWS Henning Rueckborn
  	</description>

	<property name="main.src.dir" value="src"/>
	<property name="main.dist.dir" value="dist"/>
	<property name="test.src.dir" value="test"/>
	<property name="main.build.dir" value="build"/>
	<property name="test.build.dir" value="build/test"/>
	<property name="test.report.dir" value="report/"/>
	
	<property name="sonar.ant.dir" value=".ant"/>
	<property name="sonar.host.url" value="http://localhost:9000" />
	<property name="sonar.projectKey" value="mylittleshop" />
	<property name="sonar.projectName" value="mylittleshop" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="${main.src.dir}" />
	<property name="sonar.tests" value="${test.src.dir}"/>
	<property name="sonar.junit.reportsPath" value="${test.report.dir}"/>
	<property name="sonar.language" value="java" />
	<property name="sonar.java.binaries" value="build" />
	<property name="sonar.java.libraries" value="lib/*.jar" />

	<path id="classpath.test">
		<pathelement location="lib/junit-4.12.jar"/>
		<pathelement location="lib/hamcrest-core-1.3.jar"/>
		<pathelement location="${main.build.dir}"/>
	</path>

	<path id="classpath.compile">
		<pathelement location="lib/commons-lang-2.6.jar"/>
	</path>
	
	
	
	<target name="init" description="legt die entsprechenden Verzeichnisse an">
		<tstamp/>
		<mkdir dir="${main.build.dir}"/>
	</target>

	<target name="clean" description="rÃ¤umt auf">
		<delete dir="${main.build.dir}"/>
		<delete dir="${main.dist.dir}"/>
	</target>

	<target name="compile" depends="clean,init" description="compiliert die Klassen">
		<javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false">
			<classpath refid="classpath.compile" />
		</javac>
	</target>

	<target name="test-compile" depends="compile" description="kompiliert die Tests">
		<mkdir dir="${test.build.dir}"/>
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
			<classpath refid="classpath.test"/>
		</javac>
	</target>

	<target name="test" depends="test-compile" description="startet die Tests">
		<mkdir dir="${test.report.dir}"/>
		
		<junit printsummary="yes" haltonfailure="yes" fork="true">
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
			</classpath>
			
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
			<formatter type="brief" usefile="false" />
			
			<batchtest  todir="${test.report.dir}">
				<fileset dir="${test.src.dir}" includes="**/*Test.java" />
			</batchtest>
		</junit>
		
		<junitreport todir="${test.report.dir}">
		 	<fileset dir="${test.report.dir}">
		    	<include name="TEST-*.xml"/>
		  	</fileset>
		  	<report format="frames" todir="${test.report.dir}"/>
		</junitreport>
	</target>

	<target name="build" depends="compile,sonar" description="baut eine JAR Datei mit eingebautem Manifest">
		<mkdir dir="${main.dist.dir}"/>

		<jar jarfile="${main.dist.dir}/MyLittleShop.jar" basedir="${main.build.dir}">
			<manifest>
				<attribute name="Main-Class" value="de.realist.shop.Controller"/>
			</manifest>
		</jar>
	</target>
	
	<target name="sonar">
	    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
	        <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
	        <classpath path="sonarqube-ant-task-*.jar" />
	    </taskdef>
		
	    <sonar:sonar />
	</target>
</project>